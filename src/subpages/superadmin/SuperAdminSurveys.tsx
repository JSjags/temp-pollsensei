"use client"

import { useGetSuperAdminSurveyQuery } from '@/services/superadmin.service'
import React, { useState } from 'react'
import { FadeLoader } from 'react-spinners';
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import { generateInitials } from '@/lib/utils';
import { formatDateOption } from '@/lib/helpers';
import PageControl from '@/components/common/PageControl';


const SuperAdminSurveys = () => { 
    const [currentPage, setCurrentPage] = useState(1);
  
  const { data, isLoading, error, isFetching, refetch } = useGetSuperAdminSurveyQuery("")
  const totalItems = data?.data?.total || 0;
  const totalPages = Math.ceil(totalItems / 20);
  console.log(data)

  const navigatePage = (direction: "next" | "prev") => {
    setCurrentPage((prevIndex) => {
      if (direction === "next") {
        return prevIndex < totalPages ? prevIndex + 1 : prevIndex;
      } else {
        return prevIndex > 1 ? prevIndex - 1 : prevIndex;
      }
    });
    refetch();
  };

  const statusColorMap = [
    "#FFC107",
    "#3498DB",
    "#27AE60",
    "#2980B9",
    "#2ECC71",
    "#E74C3C",
    "#FF5733",
    "#FF5733",
    "#FF5733",
  ];
  const getRandomColor = () => {
    return statusColorMap[Math.floor(Math.random() * statusColorMap.length)];
  };
  return (
    <div className='p-6 bg-gray-50 min-h-screen w-full'>
       <h1 className="text-sm font-bold mb-6">Created survey table </h1>
            <div className="overflow-x-auto w-full">
        <table className="w-full border-collapse border-gray-200 overflow-x-auto">
          <thead className="bg-gray-100">
            <tr>
              <th className="text-left py-3 px-4 font-medium text-sm">
                Created by Name
              </th>
              <th className="text-left py-3 px-4 font-medium text-sm">
                Email Address
              </th>
              <th className="text-left py-3 px-4 font-medium text-sm">
                Survey Topic
              </th>
              <th className="text-left py-3 px-4 font-medium text-sm">
                Generated by
              </th>
              <th className="text-left py-3 px-4 font-medium text-sm">
                Survey Type
              </th>
              <th className="text-left py-3 px-4 font-medium text-sm">
                Created Date
              </th>
              <th className="text-left py-3 px-4 font-medium text-sm">
                Status
              </th>
            </tr>
          </thead>
          <tbody>
            {isLoading || isFetching ? (
              <tr>
                <td colSpan={6} className="text-center ">
                  <span className="flex justify-center items-center">
                    <FadeLoader height={10} radius={1} className="mt-3" />
                  </span>
                </td>
              </tr>
            ) : error ? (
              <tr>
                <td colSpan={6} className="text-center ">
                  <span className="flex justify-center items-center text-xs text-red-500">
                    Something went wrong
                  </span>
                </td>
              </tr>
            ) : data?.data?.data?.length === 0 || data?.data?.data?.length === undefined ? (
              <tr>
                <td colSpan={6} className="text-center ">
                  <span className="flex justify-center items-center py-4 text-xs text-green-500">
                    No record found
                  </span>
                </td>
              </tr>
            ) : (
              data?.data?.data?.map((user: any, index: number) => (
                <tr
                  key={index}
                  className={`text-xs ${
                    index % 2 === 0 ? "bg-[#F7EEFED9]" : "bg-[#FEF5FED6]"
                  } text-sm rounded-md`}
                >
                  <td className="py-3 px-4 flex items-center gap-2">
                    <Avatar className="size-8">
                      <AvatarImage
                        src={(user as any)?.photo_url ?? ""}
                        alt="@johndoe"
                      />
                      <AvatarFallback
                        className={`font-semibold  `}
                        style={{ backgroundColor: getRandomColor() }}
                      >
                        {generateInitials(user?.creator.name ?? "")}
                      </AvatarFallback>
                    </Avatar>
                    {user?.creator.name}
                  </td>
                  <td className="py-3 px-4">{user?.creator.email}</td>
                  <td className="py-3 px-4">
                    {user?.topic}
                  </td>
                  <td className="py-3 px-4">
                    {user?.generated_by}
                  </td>
                  <td
                    className={`py-3 px-4 font-medium`}
                  >
                  {user?.survey_type}
                  </td>
                  
                  <td className="py-3 px-4">
                    {user?.createdAt
                      ? formatDateOption(user.createdAt)
                      : "Not Available"}
                  </td>
                  <td className="py-3 px-4">
                 {user?.status}
                  </td>
                </tr>
              ))
            )}
          </tbody>
        </table>
      </div>
      <div className="mt-6 sm:mt-8 flex justify-between items-center">
        <p className="text-xs font-medium">
          {totalItems > 0
            ? `Showing ${(currentPage - 1) * 20 + 1}-${Math.min(
                currentPage * 20,
                totalItems
              )} of ${totalItems}`
            : "No items to display"}
        </p>
        <PageControl
          currentPage={currentPage}
          totalPages={totalPages}
          onNavigate={navigatePage}
        />
      </div>
    </div>
  )
}

export default SuperAdminSurveys
